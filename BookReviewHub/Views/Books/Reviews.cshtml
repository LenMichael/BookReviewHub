@model BookReviewHub.Models.Book

@{
    ViewData["Title"] = $"Reviews for \"{Model.Title}\" by {Model.Author}";
}

<h2>@ViewData["Title"]</h2>
<p>Published: @Model.PublishedYear | Genre: @Model.Genre</p>

@if (Model.Reviews == null || !Model.Reviews.Any())
{
    <p>No reviews yet for this book.</p>
}
else
{
    <ul>
        @foreach (var review in Model.Reviews)
        {
            <li>
                <strong>Rating:</strong> @review.Rating<br />
                <strong>Content:</strong> @review.Content<br />
                <small>@* By user: @review.UserId, *@ @review.DateCreated.ToShortDateString()</small>
            </li>
        }
    </ul>
}

@if (User.Identity.IsAuthenticated)
{
    <h4>Leave a Review</h4>
    <form asp-action="Create" asp-controller="Reviews" method="post">
        <input type="hidden" name="BookId" value="@Model.Id" />
        <div class="form-group">
            <label for="Rating">Rating</label>
            <input type="number" name="Rating" class="form-control" min="1" max="5" required />
        </div>
        <div class="form-group">
            <label for="Content">Content</label>
            <textarea name="Content" class="form-control" required></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Submit Review</button>
    </form>
    @if (ViewBag.ValidationErrors != null)
    {
        <ul class="text-danger">
            @foreach (var err in (List<string>)ViewBag.ValidationErrors)
            {
                <li>@err</li>
            }
        </ul>
    }
}
else
{
    <p><a asp-area="" asp-controller="Account" asp-action="Login">Login</a> to leave a review.</p>
}

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
